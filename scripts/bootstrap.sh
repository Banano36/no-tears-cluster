#!/usr/bin/env bash -l
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

# Note the -l above to get .bashrc and /etc/profile

exec &> >(tee -a "/tmp/BOOTSTRAP.log")
shopt -q login_shell && echo 'Login shell' || echo 'Not login shell'

# Force login shell
. /etc/profile

if [ -f /tmp/BOOTSTRAP.WHOAMI ]; then
    echo "bootstrap is already running"
    exit 0
fi

whoami > /tmp/BOOTSTRAP.WHOAMI
env >> /tmp/BOOTSTRAP.WHOAMI

#export VPC_ID=${1:-default}
#export MASTER_SUBNET_ID=${2:-default}
#export COMPUTE_SUBNET_ID=${3:-default}
#export SSH_KEY_ID=${1:-default}
#export PRIVATE_KEY_ARN=${2:-default}

#TODO:
sudo pip-3.6 --disable-pip-version-check --no-cache-dir install aws-parallelcluster --upgrade
#sudo pip-3.6 --disable-pip-version-check --no-cache-dir install aws-parallelcluster --user

export AWS_DEFAULT_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | rev | cut -c 2- | rev)

# Load the SSH Key generated by CloudFormation
aws secretsmanager get-secret-value --secret-id ${private_key_arn} --query SecretString --output text > ~/.ssh/${ssh_key_id}
chmod 600 ~/.ssh/${ssh_key_id}

# Automatically add ssh key into agent. we need to make the agent stop asking for a password
echo 'eval $(ssh-agent)' >> ~/.bashrc
echo "ssh-add ~/.ssh/${ssh_key_id}" >> ~/.bashrc

# Fetch the config file from S3 and substitute variables
mkdir -p ~/.parallelcluster
aws s3 cp ${config} /tmp/config.ini --quiet
envsubst < /tmp/config.ini > ~/.parallelcluster/config

. ~/.bashrc
. /etc/profile

which pcluster >> /tmp/BOOTSTRAP.WHOAMI

aws configure set default.region ${AWS_DEFAULT_REGION}
aws configure set default.output json

env >> /tmp/BOOTSTRAP.PCLUSTER

pcluster list

# Start the pcluster provisioning, but don't wait for it to complete.
pcluster create -t hpc hpc-cluster -c ~/.parallelcluster/config --nowait -nr

echo "Finished" >> /tmp/BOOTSTRAP.WHOAMI
echo "Finished"
